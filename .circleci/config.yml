version: 2.1

shortcuts:
  lang_env: &lang_env
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
  pipenv_env: &pipenv_env
    PIPENV_IGNORE_VIRTUALENVS: 1

commands:
  pip_install:
    description: "Install using pipenv and caching."
    parameters:
      key:
        type: string
        default: linux
      dir:
        type: string
        default: /root/.local/share/virtualenvs/
    steps:
      - restore_cache:
          key: &pip-cache pip-<< parameters.key >>-{{ .Branch }}-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Pipenv Install
          command: |
            pip3 install -U pip
            pip3 install -U pipenv
            pip3 install pyyaml -U --force
            pipenv run pip3 install pip
            pipenv install --dev
            pipenv run pip3 install pyyaml -U --force
          environment:
            <<: *pipenv_env
            PIP_SHIMS_BASE_MODULE: pipenv.patched.notpip

      - save_cache:
          key: *pip-cache
          paths:
          - << parameters.dir >>

executors:
  grow:
    docker:
      - image: grow/grow-internal-image:latest
  osx:
    macos:
      xcode: "11.4.1"

jobs:
  init:
    executor: grow
    working_directory: ~/grow
    steps:
      - checkout

      - restore_cache:
          key: &ui-cache ui-{{ .Branch }}-{{ checksum "grow/ui/package.json" }}-{{ checksum "grow/ui/yarn.lock" }}

      - run:
          name: Build UI
          command: make build-ui

      - save_cache:
          key: *ui-cache
          paths:
            - "grow/ui/node_modules"

      - persist_to_workspace:
          root: ~/grow
          paths:
            - .coveragerc
            - .git/*
            - bin/*
            - grow/*
            - scripts/*
            - description.txt
            - install.py
            - Makefile
            - MANIFEST.in
            - package.json
            - pylintrc
            - Pipfile
            - Pipfile.lock
            - setup.py

  pylint:
    executor: grow
    working_directory: ~/grow
    steps:
      - attach_workspace:
          at: ~/grow

      - pip_install

      - run:
          name: Pylint
          command: make test-pylint

  release-package-pypi:
    executor: grow
    working_directory: ~/grow
    steps:
      - attach_workspace:
          at: ~/grow

      - pip_install

      - run:
          name: Create Distribution
          command: pipenv run python setup.py sdist bdist_wheel
          environment:
            <<: *pipenv_env

      - run:
          name: Twine Upload
          command: pipenv run twine upload dist/grow-$(<grow/VERSION)*
          environment:
            <<: *pipenv_env

      - store_artifacts:
          path: dist/

  test:
    executor: grow
    working_directory: ~/grow
    steps:
      - attach_workspace:
          at: ~/grow

      - pip_install

      - run:
          name: Run Tests
          command: make test-nosetests
          environment: *lang_env

      - run:
          name: Code Coverage
          command: pipenv run codecov
          environment:
            <<: *pipenv_env

      - run:
          name: Test build
          command: ./scripts/grow build ./grow/testing/testdata/pod

  test-osx:
    executor: osx
    working_directory: ~/grow
    steps:
      - attach_workspace:
          at: ~/grow

      - pip_install:
          dir: /Users/distiller/.local/share/virtualenvs/
          key: osx

      - run:
          name: Run Tests
          command: make test-nosetests
          environment: *lang_env

      - run:
          name: Code Coverage
          command: pipenv run codecov
          environment:
            <<: *pipenv_env

      - run:
          name: Test build
          command: ./scripts/grow build ./grow/testing/testdata/pod

filter_all_tags: &filter_all_tags
  filters:
    tags:
      only: /.*/

filter_only_branches: &filter_only_branches
  filters:
    tags:
      ignore: /.*/
    branches:
      only: /.*/

filter_only_tags: &filter_only_tags
  filters:
    tags:
      only: /.*/
    branches:
      ignore: /.*/

workflows:
  version: 2
  build:
    jobs:
    - init:
        <<: *filter_all_tags
    - pylint:
        <<: *filter_all_tags
        requires:
        - init
    - test:
        <<: *filter_all_tags
        requires:
        - init
    - test-osx:
        <<: *filter_all_tags
        requires:
        - init
    - release-package-pypi:
        <<: *filter_only_tags
        requires:
        - pylint
        - test
        - test-osx
